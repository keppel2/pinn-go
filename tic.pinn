// 0 tie, 1 player true, 2 player false
// 0 empty, 1 true, 2 false

func coord (x int, y int) int {
	return x * 3 + y;
}

func printBoard (board [9]int) {
	y int;
	x int;
	for x = range 0:3 {
		for y = range 0:3 {
		print (board[coord(x, y)], board[coord(x, y)], board[coord(x, y)]);
		}
	}
	print ("---");
}

func winner (board [9]int) int {
	current int;
	x int;
	y int;
	for x = range 0:3 {
		current = board[coord(x, 0)];
		for y = range 1:3 {
			if board[coord(x, y)] != current {
				current = 0;
			}
		}
		if current != 0 {
			return current;
		}
	}
	for y = range 0:3 {
		current = board[coord(0, y)];
		for x = range 1:3 {
			if board[coord(x, y)] != current {
				current = 0;
			}
		}
		if current != 0 {
			return current;
		}
	}
	if board[coord(0, 0)] != 0 &&
		board[coord(0, 0)] == board[coord(1, 1)] &&
		board[coord(1, 1)] == board[coord(2, 2)] {
			return board[coord(1, 1)];
	}
	if board[coord(2, 0)] != 0 &&
		board[coord(2, 0)] == board[coord(1, 1)] &&
		board[coord(1, 1)] == board[coord(0, 2)] {
			return board[coord(1, 1)];
	}
	return 0;
}

func opposite (x int) int {
	if x == 1 { return 2;}
	return 1;
}

iters int;
			
func minimax (player int, board [9]int) int
{
	result int;
	best int = -1;
	result = winner(board);
	if result != 0 {
		return result;
	}
	x int;
	y int;
	for x = range 0:3 {
		for y = range 0:3 {
			if board[coord(x, y)] == 0 {
				if best == -1 {
					best = opposite(player);
				}
				board[coord(x, y)] = player;
				result = minimax(opposite(player), board);
				if result == player {
					return player;
				}
				if result == 0 {
					best = 0;
				}
				board[coord(x, y)] = 0;
			}
		}
	}
	if best == -1 {
		best = 0;
	}
	return best;
}

func main ( )
{
	board [9]int;
	printBoard(board);
	result int = minimax (1, board);
	print (result);
}
